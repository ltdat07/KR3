version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: shop
      POSTGRES_PASSWORD: shop_pass
      POSTGRES_DB: shopdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shop -d shopdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  orders-service:
    build:
      context: .
      dockerfile: orders-service/Dockerfile
    container_name: orders-service
    depends_on:
      zookeeper:
        condition: service_started
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql+asyncpg://shop:shop_pass@postgres:5432/shopdb
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      ORDERS_TOPIC: order_created
      PAYMENT_RESULTS_TOPIC: payment_finished
      LOG_LEVEL: INFO

  payments-service:
    build:
      context: .
      dockerfile: payments-service/Dockerfile
    container_name: payments-service
    depends_on:
      zookeeper:
        condition: service_started
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql+asyncpg://shop:shop_pass@postgres:5432/shopdb
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      ORDERS_TOPIC: order_created
      PAYMENT_RESULTS_TOPIC: payment_finished
      LOG_LEVEL: INFO

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      orders-service:
        condition: service_started
      payments-service:
        condition: service_started
    ports:
      - "8000:8000"
    environment:
      ORDERS_URL: http://orders-service:8001
      PAYMENTS_URL: http://payments-service:8002

volumes:
  pgdata:
